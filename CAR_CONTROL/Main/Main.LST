C51 COMPILER V9.53.0.0   MAIN                                                              08/15/2019 17:02:13 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN Main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.exe Main.c DB OE BR INCDIR(C:\SiLabs\MCU\Inc)

line level    source

   1          
   2          #include "Config.h"
   3          #include "MCU_IO.h"
   4          
   5          
   6          void parsingControl();
   7          void sendAnswer();
   8          void RunLED();
   9          void readADC();
  10          
  11          //------------------------------------------------------------------------------//
  12          //                               Main function                                  //
  13          //------------------------------------------------------------------------------//
  14          // Инициализация портов
  15          void Init_IO()
  16          {
  17   1              P0 = P0_IO;
  18   1              P1 = P1_IO;
  19   1              P2 = P2_IO;
  20   1              P3 = P3_IO;     
  21   1              //Выключение Bluetooth
  22   1              BT_EN = 1;
  23   1      }
  24          
  25          void UART_RX_DECODE()
  26          {
  27   1              b_uart_rx = 0;
  28   1              AD0BUSY = 1;
  29   1              
  30   1              if(UART_Buffer[UART_CMD] == CMD_CONTROL)
  31   1              {
  32   2                      parsingControl();
  33   2              }       
  34   1      }
  35          
  36          void parsingControl()
  37          {
  38   1      
  39   1              char control = UART_Buffer[UART_Data + 3];
  40   1          bit cb0 = (control >> 0) & 1u;
  41   1              bit cb1 = (control >> 1) & 1u;
  42   1              bit cb2 = (control >> 2) & 1u;
  43   1              bit cb3 = (control >> 3) & 1u;
  44   1              
  45   1              LED0 = cb0;
  46   1              FORWARD = cb0;
  47   1      
  48   1              LED1 = cb1;
  49   1              BACKWARD = cb1; 
  50   1      
  51   1              LED2 = cb2;
  52   1              LEFT = cb2;
  53   1              
  54   1              LED3  = cb3;
  55   1              RIGHT = cb3;
C51 COMPILER V9.53.0.0   MAIN                                                              08/15/2019 17:02:13 PAGE 2   

  56   1                                      
  57   1              sendAnswer();
  58   1      }
  59          
  60          void sendAnswer()  
  61          {
  62   1              SBUF0 = 0;
  63   1              readADC();
  64   1      }
  65          
  66          unsigned short volt = 0;
  67          unsigned char adc_h;
  68          unsigned char adc_l;
  69          void readADC()
  70          {       
  71   1      
  72   1              adc_h = ADC0H;
  73   1              adc_l = ADC0L;
  74   1      
  75   1              volt = (adc_h << 8);
  76   1              volt |= adc_l;
  77   1      }
  78          
  79          
  80          void main(void)
  81          {
  82   1              
  83   1              PCA0MD &= ~0x40; // Disable the watchdog timer 
  84   1      
  85   1              Init_Device();
  86   1              Init_IO();
  87   1              EA = 1;
  88   1         //   IP |= 0x10;                         // Make UART high priority
  89   1              ES0 = 1;                            // Enable UART0 interrupts
  90   1              while(1) {
  91   2                      PCA0MD = 0x00;
  92   2                      if(b_uart_rx)           
  93   2                              UART_RX_DECODE();               
  94   2              };
  95   1      }
  96          
  97          #define uart_head_h 0xAB
  98          #define uart_head_l 0xBA
  99          static int readByte = 0;
 100          static int sizeData = 0;
 101          
 102          
 103          char getCRC(unsigned char size)
 104          {
 105   1              char crc = 0;
 106   1              char i;
 107   1              for (i = 0; i < size; i++)
 108   1              {
 109   2                      crc += UART_Buffer[i];  
 110   2              }
 111   1              return crc;
 112   1      }
 113          
 114          int val = 0;
 115          
 116          void UART0_Interrupt (void) interrupt 4
 117          {
C51 COMPILER V9.53.0.0   MAIN                                                              08/15/2019 17:02:13 PAGE 3   

 118   1         PCA0MD &= ~0x40;
 119   1         if (TI0 == 1)                   // Check if transmit flag is set
 120   1         {
 121   2            TI0 = 0; 
 122   2         }
 123   1      
 124   1         if (RI0 == 1)
 125   1         {  
 126   2      
 127   2            RI0 = 0;                           // Clear interrupt flag        
 128   2                UART_Buffer[readByte] = SBUF0;      // Store in array
 129   2      
 130   2              if(readByte == 0)
 131   2              {
 132   3                      if(UART_Buffer[readByte] == uart_head_h)                
 133   3                              readByte++;     
 134   3      
 135   3                      return;
 136   3              }
 137   2          
 138   2              if(readByte == 1)
 139   2              {
 140   3                      if(UART_Buffer[readByte] == uart_head_l)        
 141   3                              readByte++;             
 142   3                      else 
 143   3                              readByte = 0;
 144   3      
 145   3                      return;
 146   3              }
 147   2      
 148   2              if(readByte == 2 || readByte == 3)
 149   2              {
 150   3                      readByte++;
 151   3                      return;
 152   3              }
 153   2      
 154   2          if(readByte == 4)
 155   2              {
 156   3                      sizeData = UART_Buffer[readByte];
 157   3                      readByte++;
 158   3                      return;
 159   3              }
 160   2              
 161   2              while(readByte < sizeData + 5)
 162   2              {
 163   3                  readByte++; 
 164   3                      return;
 165   3              }
 166   2      
 167   2          if(readByte == sizeData + 5)
 168   2              {
 169   3                      if(UART_Buffer[readByte] == getCRC(readByte))   
 170   3                              b_uart_rx = 1;  
 171   3      
 172   3              }
 173   2          readByte = 0;             
 174   2      
 175   2         }
 176   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.53.0.0   MAIN                                                              08/15/2019 17:02:13 PAGE 4   

   CODE SIZE        =    440    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     78    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       4
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
