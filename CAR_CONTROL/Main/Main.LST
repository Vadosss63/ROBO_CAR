C51 COMPILER V9.53.0.0   MAIN                                                              08/14/2019 21:31:00 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN Main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.exe Main.c DB OE BR INCDIR(C:\SiLabs\MCU\Inc)

line level    source

   1          
   2          #include "Config.h"
   3          #include "MCU_IO.h"
   4          
   5          
   6          void parsingControl();
   7          void sendAnswer();
   8          void RunLED();
   9          
  10          //------------------------------------------------------------------------------//
  11          //                               Main function                                  //
  12          //------------------------------------------------------------------------------//
  13          // Инициализация портов
  14          void Init_IO()
  15          {
  16   1              P0 = P0_IO;
  17   1              P1 = P1_IO;
  18   1              P2 = P2_IO;
  19   1              P3 = P3_IO;     
  20   1              //Выключение Bluetooth
  21   1              BT_EN = 1;
  22   1      }
  23          
  24          void UART_RX_DECODE()
  25          {
  26   1              b_uart_rx = 0;
  27   1              
  28   1              if(UART_Buffer[UART_CMD] == CMD_CONTROL)
  29   1              {
  30   2                      parsingControl();
  31   2              }       
  32   1      }
  33          
  34          void parsingControl()
  35          {
  36   1              char control = UART_Buffer[UART_Data + 3];
  37   1          bit cb0 = (control >> 0) & 1u;
  38   1              bit cb1 = (control >> 1) & 1u;
  39   1              bit cb2 = (control >> 2) & 1u;
  40   1              bit cb3 = (control >> 3) & 1u;
  41   1              
  42   1              LED0 = cb0;
  43   1              FORWARD = cb0;
  44   1      
  45   1              LED1 = cb1;
  46   1              BACKWARD = cb1; 
  47   1      
  48   1              LED2 = cb2;
  49   1              LEFT = cb2;
  50   1              
  51   1              LED3  = cb3;
  52   1              RIGHT = cb3;
  53   1                                      
  54   1              sendAnswer();
  55   1      }
C51 COMPILER V9.53.0.0   MAIN                                                              08/14/2019 21:31:00 PAGE 2   

  56          
  57          void sendAnswer()  
  58          {
  59   1        SBUF0 = 0;
  60   1      }
  61          
  62          void main(void)
  63          {
  64   1              
  65   1              PCA0MD &= ~0x40; // Disable the watchdog timer 
  66   1      
  67   1              Init_Device();
  68   1              Init_IO();
  69   1              EA = 1;
  70   1         //   IP |= 0x10;                         // Make UART high priority
  71   1              ES0 = 1;                            // Enable UART0 interrupts
  72   1              while(1) {
  73   2                      PCA0MD = 0x00;
  74   2                      if(b_uart_rx)           
  75   2                              UART_RX_DECODE();               
  76   2              };
  77   1      }
  78          
  79          #define uart_head_h 0xAB
  80          #define uart_head_l 0xBA
  81          static char Byte;
  82          static int readByte = 0;
  83          static int sizeData = 0;
  84          
  85          
  86          char getCRC(unsigned char size)
  87          {
  88   1              char crc = 0;
  89   1              char i;
  90   1              for (i = 0; i < size; i++)
  91   1              {
  92   2                      crc += UART_Buffer[i];  
  93   2              }
  94   1              return crc;
  95   1      }
  96          
  97          int val = 0;
  98          
  99          void UART0_Interrupt (void) interrupt 4
 100          {
 101   1         PCA0MD &= ~0x40;
 102   1         if (TI0 == 1)                   // Check if transmit flag is set
 103   1         {
 104   2            TI0 = 0; 
 105   2         }
 106   1      
 107   1         if (RI0 == 1)
 108   1         {  
 109   2      
 110   2            RI0 = 0;                           // Clear interrupt flag
 111   2            Byte = SBUF0;                      // Read a character from UART  
 112   2                UART_Buffer[readByte] = Byte;      // Store in array
 113   2      
 114   2              if(readByte == 0)
 115   2              {
 116   3                      if(UART_Buffer[readByte] == uart_head_h)                
 117   3                              readByte++;     
C51 COMPILER V9.53.0.0   MAIN                                                              08/14/2019 21:31:00 PAGE 3   

 118   3      
 119   3                      return;
 120   3              }
 121   2          
 122   2              if(readByte == 1)
 123   2              {
 124   3                      if(UART_Buffer[readByte] == uart_head_l)        
 125   3                              readByte++;             
 126   3                      else 
 127   3                              readByte = 0;
 128   3      
 129   3                      return;
 130   3              }
 131   2      
 132   2              if(readByte == 2 || readByte == 3)
 133   2              {
 134   3                      readByte++;
 135   3                      return;
 136   3              }
 137   2      
 138   2          if(readByte == 4)
 139   2              {
 140   3                      sizeData = Byte;
 141   3                      readByte++;
 142   3                      return;
 143   3              }
 144   2              
 145   2              while(readByte < sizeData + 5)
 146   2              {
 147   3                  readByte++; 
 148   3                      return;
 149   3              }
 150   2      
 151   2          if(readByte == sizeData + 5)
 152   2              {
 153   3                      if(Byte == getCRC(readByte))    
 154   3                              b_uart_rx = 1;  
 155   3      
 156   3              }
 157   2          readByte = 0;             
 158   2      
 159   2         }
 160   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    415    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     75    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       4
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
